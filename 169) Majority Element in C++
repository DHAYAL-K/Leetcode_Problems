//Better Solution
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        map<int,int>mpp;
        for(int i=0;i<nums.size();i++){
            mpp[nums[i]]++;
        }
        for(auto it:mpp){
            if(it.second>nums.size()/2)return it.first;
        }
        return 0;
    }
};
//optimal approach
//TC: O(N)
//SC : O(1)
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        if(nums.size()>INT_MAX || nums.size()<1)return 0;
        int n=nums.size();
        int cnt=0,el;
        for(int i=0;i<n;i++){
            if(cnt==0){
                el=nums[i];
                cnt=1;
            }
            else if(el==nums[i]){
                cnt++;
            }
            else{
                cnt--;
            }
        }
        cnt=0;
        for(int i=0;i<n;i++){
            if(el==nums[i])cnt++;
        }
        if(cnt>(n/2))return el;
        return -1;
        
    }
};
