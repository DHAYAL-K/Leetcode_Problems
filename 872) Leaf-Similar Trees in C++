/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void tree_check(TreeNode* root,vector<int>&tree){
        if(root!=NULL && root->left==NULL && root->right==NULL){
            tree.push_back(root->val);
            return;
        }else if(root==NULL)return;
        tree_check(root->left,tree);
        tree_check(root->right,tree);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int>tree1,tree2;
        tree_check(root1,tree1);
        tree_check(root2,tree2);
        if(tree1.size()!=tree2.size())return false;
        else{
            for(int i=0;i<tree1.size();i++){
                if(tree1[i]!=tree2[i])return false;
            }
        }
        return true;
    }
};
