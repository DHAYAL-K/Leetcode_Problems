/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        if(!root)return 0;
        queue<TreeNode*>qt;
        int ans=root->val;
        qt.push(root);
        while(!qt.empty()){
            int n=qt.size();
            int flag=0;
            for(int i=0;i<n;i++){
                TreeNode* temp=qt.front();
                qt.pop();
                if(temp->left){
                    qt.push(temp->left);
                }
                if(temp->right){
                    qt.push(temp->right);
                }
                if(!flag){
                    flag=1;
                    ans=temp->val;
                }
            }
        }
        return ans;
    }
};
