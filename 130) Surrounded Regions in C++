class Solution {
public:    
    void dfs(vector<vector<char>>& board,vector<vector<int>>& vis,int i,int j){
        int m=board.size();
        int n=board[0].size();
        vis[i][j]=1;
         int rc[]={-1,1,0,0};
         int cc[]={0,0,-1,1};
        for(int k=0;k<4;k++){
            int row=i+rc[k];
            int col=j+cc[k];
            if(row>=0 && row<m && col>=0 && col<n && board[row][col]=='O' && vis[row][col]==0){
                dfs(board,vis,row,col);
            }
        }
        
    }
    void solve(vector<vector<char>>& board) {
        int m=board.size();
        int n=board[0].size();
        vector<vector<int>>vis(m,vector<int>(n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((board[i][j]=='O' && vis[i][j]==0)&&((i==0 || i==m-1) || (j==0 || j==n-1))){
                    dfs(board,vis,i,j);
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(vis[i][j]==0){
                    board[i][j]='X';
                }
            }
        }

    }
};
