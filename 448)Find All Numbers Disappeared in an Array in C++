/* using hash map
class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        int n=nums.size();
        vector<int>answer;
        map<int,int>ans;
        for(int i=0;i<n;i++){
            ans[nums[i]]++;
        }
        for(int i=1;i<=n;i++){
            if(ans.find(i)==ans.end()){
                answer.push_back(i);
            }
        }

        return answer;

    }
};*/
// using cycle sort
class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        int i=0;
        vector<int>ans;
        while(i<nums.size()){
            if( nums[i] != nums[nums[i]-1] && nums[i]!=i+1){
                int temp=nums[nums[i]-1];
                nums[nums[i]-1]=nums[i];
                nums[i]=temp;
            }
            else{
                i++;
            }
        }
        for(int i=0;i<nums.size();i++){
            if(nums[i]!=i+1)ans.push_back(i+1);
        }
        return ans;
    }
};
