//sliding window approach
class Solution {
public:
    long long countAlternatingSubarrays(vector<int>& nums) {
        long long ans=0;
        int last_repeting_index=-1;
        int n=nums.size();
        for(int i=0;i<n;i++){
            if(i>0 && nums[i]==nums[i-1]){
                last_repeting_index=i-1;
            }
            ans+=(i-last_repeting_index);
        }
        return ans;
    }
};
/* DP approach
class Solution {
public:
    long long countAlternatingSubarrays(vector<int>& nums) {
        
    long long int ans = 0;
    int dp[nums.size()];
    dp[0] = 1;
    ans += dp[0];
    for(int i=1 ; i<nums.size() ; i++) {
        if(nums[i] == nums[i-1]) {
            dp[i] = 1;
        }
        else {
            dp[i] = dp[i-1]+1;
        }
        ans += dp[i];
    }
    return ans;
        
    }
};
*/
