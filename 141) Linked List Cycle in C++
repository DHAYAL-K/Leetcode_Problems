/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */  
 //Optimal approach
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *slow=head;
        ListNode *fast=head;
        while(fast!=nullptr && fast->next!=nullptr){
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)return true;
        }
        return false;
    }
};
/* Better approach
class Solution {
public:
    bool hasCycle(ListNode *head) {
        unordered_set<ListNode*> visited_nodes;
        ListNode *current_node=head;
        while(current_node!=nullptr){
            if(visited_nodes.find(current_node)!=visited_nodes.end()){
                return true;
            }
            visited_nodes.insert(current_node);
            current_node=current_node->next;
        }
        return false;
    }
};
*/
