class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m=mat.size();
        int n=mat[0].size();
        vector<vector<int>>ans(m,vector<int>(n,0));
        vector<vector<int>>vis(m,vector<int>(n,0));
        queue<pair<pair<int,int>,int>>qt;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(mat[i][j]==0){
                    qt.push({{i,j},0});
                    vis[i][j]=1;
                }
                
            }
        }
        int drow[]={-1,1,0,0};
        int dcol[]={0,0,-1,1};
        while(!qt.empty()){
            int row=qt.front().first.first;
            int col=qt.front().first.second;
            int steps=qt.front().second;
            qt.pop();
            ans[row][col]=steps;

            for(int i=0;i<4;i++){
                int a=row+drow[i];
                int b=col+dcol[i];
                if(a>=0 && a<m && b>=0 && b<n && vis[a][b]==0){
                    qt.push({{a,b},steps+1});
                    vis[a][b]=1;
                }
            }
        }
        return ans;
    }
};
