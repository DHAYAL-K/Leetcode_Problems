class Solution {
public:
    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {
        vector<pair<int,int>>input;
        int n=profit.size();
        for(int i=0;i<n;i++){
            input.push_back({difficulty[i],profit[i]});
        }
        sort(input.begin(),input.end());
        sort(worker.begin(),worker.end());
        int ans=0;
        priority_queue<int>qt;
        int j=0,dif=INT_MAX;
        for(int i=0;i<worker.size();i++){
            if(j<n)dif=input[j].first;
            while(worker[i]>=dif && j<n){
                int pro=input[j].second;
                qt.push(pro);
                j++;
                if(j<n)dif=input[j].first;
            }
            if(!qt.empty())
            ans+=qt.top();
        }
        return ans;
    }
};
