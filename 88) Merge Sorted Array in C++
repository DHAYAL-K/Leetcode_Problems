// OPTIMAL SOLUTION IN C++
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int temp=0;
        for(int i=0;i<m+n;i++){
            if(i>=m){
                nums1[i]=nums2[temp++];
            }
        }
        sort(nums1.begin(),nums1.end());
    }
};
/*  BRUTE FORCE SOLUTION IN C++
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> ans;
        int check1=0,check2=0;
        for(int i=m-1;i>=0;i--){
            if(nums1[i]!=0 || check1==1){
                ans.push_back(nums1[i]);
                check1=1;
            }
        }
        for(int j=n-1;j>=0;j--){
            if(nums2[j]!=0 || check2==1){
                ans.push_back(nums2[j]);
                check2=1;
            }
        }
        for(int k=ans.size();k<m+n;k++)ans.push_back(0);
        sort(ans.begin(),ans.end());
        nums1=ans;
    }
};
*/
