/*  OPTIMAL 1 USING BASIC MATH
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int sum=0;
        int check=(n*(n+1))/2;
        for(int i=0;i<n;i++){
            sum+=nums[i];
        }
        return {check-sum};
    }
};
*/
// OPTIMAL 2 USING CYCLE SORT
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int i=0;
        int temp=0;
        while(i<nums.size()){
            if(nums[i]<nums.size() && nums[i]!=i){
                temp=nums[nums[i]];
                nums[nums[i]]=nums[i];
                nums[i]=temp;
            }

            else {
                i++;
            }

        }
        for(int i=0;i<nums.size();i++){
            if(nums[i]!=i)return i;
        }
        return nums.size();
    }
};
