/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* func(TreeNode* root, int val, int depth,int curr){
        if(!root){
            return nullptr;
        }
        if(curr<depth){
            func(root->left,val,depth,curr+1);
            func(root->right,val,depth,curr+1);
        }
        if(curr==depth){
            TreeNode* exleft=root->left;
            TreeNode* exright=root->right;
            TreeNode* val1=new TreeNode(val);
            TreeNode* val2=new TreeNode(val);
            root->left=val1;
            root->right=val2;
            val1->left=exleft;
            val2->right=exright;
        }
        return root;
    }
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1){
            TreeNode* summa=new TreeNode(val);
            summa->right=NULL;
            summa->left=root;
            return summa;
        }
        return func(root,val,depth-1,1);
    }
};
