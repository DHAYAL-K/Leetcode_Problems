class Solution {
public:
      void dfs(vector<vector<int>>& grid,vector<vector<int>>& vis,int i,int j){
        int m=grid.size();
        int n=grid[0].size();
        vis[i][j]=1;
         int rc[]={-1,1,0,0};
         int cc[]={0,0,-1,1};
        for(int k=0;k<4;k++){
            int row=i+rc[k];
            int col=j+cc[k];
            if(row>=0 && row<m && col>=0 && col<n && grid[row][col]==1 && vis[row][col]==0){
                dfs(grid,vis,row,col);
            }
        }
        
    }
    int numEnclaves(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        int ans=0;
        vector<vector<int>>vis(m,vector<int>(n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((grid[i][j]==1 && vis[i][j]==0)&&((i==0 || i==m-1) || (j==0 || j==n-1))){
                    dfs(grid,vis,i,j);
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(vis[i][j]==0 && grid[i][j]==1){
                    ans++;
                }
            }
        }
        return ans;
    }
};
