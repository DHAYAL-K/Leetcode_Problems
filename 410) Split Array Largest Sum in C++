class Solution {
public:
    int canwe(vector<int>& nums, int mid){
        int count=1;
        long long last_ele=0;
        for(int i=0;i<nums.size();i++){
            last_ele+=nums[i];
            if(last_ele>mid){
                count++;
                last_ele=nums[i];
            }
        }
        return count;
    }
    int splitArray(vector<int>& nums, int k) {
        if(k>nums.size())return -1;
        long long left=*max_element(nums.begin(),nums.end());
        long long right=accumulate(nums.begin(),nums.end(),0);
        while(left<=right){
        long long mid=left+((right-left)/2);
            if(canwe(nums,mid)<=k){
                right=mid-1;
            }
            else{
                left=mid+1;
            }
        }
        return left;
    }
};
