class Solution {
public:
    int bestClosingTime(string customers) {
        int index=-1,score=0,max_score=0;
        for(int i=0;i<customers.length();i++){
            score+=(customers[i]=='Y')?1:-1;
            if(score>max_score){
                max_score=score;
                index=i;
            }
        }
        return index+1;
    }
};


/*
class Solution {
public:
    int bestClosingTime(string customers) {
        int n=customers.size();
        vector<int>prefix,postfix;
        prefix.push_back(0);
        postfix.push_back(0);
        int cnt=0;
        for(int i=0;i<n;i++){
            if(customers[i]=='N')cnt++;
            prefix.push_back(cnt);
        }
        cnt=0;
        for(int j=n-1;j>=0;j--){
            if(customers[j]=='Y')cnt++;
            postfix.push_back(cnt);
        }
        reverse(postfix.begin(),postfix.end());
        int mini=INT_MAX,index=-1;
        for(int i=0;i<n+1;i++){
            int temp=prefix[i]+postfix[i];
            if(mini>temp){
                mini=temp;
                index=i;
            }
        }
        return index;
    }
};*/
